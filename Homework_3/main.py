# Task 10: На столе лежат n монеток. Некоторые из них лежат вверх решкой, 
# а некоторые – гербом. Определите минимальное число монеток, которые нужно 
# перевернуть, чтобы все монетки были повернуты вверх одной и той же стороной.
# Выведите минимальное количество монет, которые нужно перевернуть

# def count_min_flips(coins):
#     head_count = coins.count('H')
#     tail_count = coins.count('T')
#     return min(head_count, tail_count)

# def input_coins(n):
#     print("Введите стороны для каждой монетки (Н - орел, Т - решка):")
#     coins = [input() for i in range(n)]
#     return coins

# n = int(input("Введите количество монеток: "))
# coins = input_coins(n)

# min_flips = count_min_flips(coins)
# print("Минимальное количество переворотов монеток:", min_flips)

# ============================================================================ 
# Task 12: Петя и Катя – брат и сестра. Петя – студент, а Катя – школьница. 
# Петя помогает Кате по математике. Он задумывает два натуральных числа X и Y 
# (X,Y≤1000), а Катя должна их отгадать. Для этого Петя делает две подсказки. Он 
# называет сумму этих чисел S и их произведение P. Помогите Кате отгадать 
# задуманные Петей числа.

# import math

# S = int(input("Введите сумму чисел S: "))
# P = int(input("Введите произведение чисел P: "))

# D = S ** 2 - 4 * P  # дискриминант

# if D < 0:  # если дискриминант отрицательный, не существует решения в 
#     # натуральных числах
#     print("Решений в натуральных числах не существует")
# else:
#     X = int((S + math.sqrt(D)) / 2)  # находим X
#     Y = S - X  # находим Y
#     print("Задуманные числа: ", X, Y)

# =============================================================================

# Task 14: Требуется вывести все целые степени двойки (т.е. числа вида 2k),
# не превосходящие числа N.

# n = int(input("Введите число N: "))
# power_of_two = 1
# while power_of_two <= n:
#     print(power_of_two)
#     power_of_two *= 2



